{"ast":null,"code":"var _jsxFileName = \"/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArrivalInfo() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const StationIdData = useSelector(state => state.StationNameData.stationId);\n  const [timeData, setTimeData] = useState([]);\n  const [arrivalTime, setArrivalTime] = useState(null);\n  const callApi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/arrivalinfo/:${id}`);\n      const resultList = response.data.response.body.items.item;\n      setTimeData(resultList);\n    } catch (error) {\n      console.error(\"Error fetching arrival info:\", error);\n    }\n  };\n  useEffect(() => {\n    callApi();\n  }, [id]);\n\n  //----------------------------------------\n\n  // console.log(timeData)\n\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n    const currentDay = new Date().getDay();\n    const currentMinute = new Date().getMinutes();\n    const resStNum = timeData.filter(data => data.stNum === Number(id));\n    const resDay = resStNum.filter(data => 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n    const resDrctUp = resDay.filter(data => data.drctType === 0);\n    const stationMinuteUp = resDrctUp.map(data => data === null || data === void 0 ? void 0 : data.tmList.split(' '));\n    const stationHourUp = resDrctUp.map(data => data.tmZone);\n    console.log(stationMinuteUp);\n    const calculateRemainingTime = (hour, minute) => {\n      const currentIndex = stationHourUp.indexOf(hour);\n      const minuteArrayForHour = stationMinuteUp[currentIndex];\n      const remainingTime = minuteArrayForHour.map(arrivalMinute => {\n        const currentMinuteValue = parseInt(arrivalMinute);\n        if (currentMinuteValue > minute) {\n          return {\n            hour,\n            minute: currentMinuteValue - minute\n          };\n        }\n        return null;\n      }).filter(Boolean);\n      if (remainingTime.length > 0) {\n        return remainingTime[0];\n      }\n      const nextHourIndex = (currentIndex + 1) % stationHourUp.length;\n      const nextHour = stationHourUp[nextHourIndex];\n      const nextMinuteValue = parseInt(stationMinuteUp[nextHourIndex][0]);\n      const nextHourRemainingMinutes = 60 - minute + nextMinuteValue;\n      return {\n        hour: nextHour,\n        minute: nextHourRemainingMinutes\n      };\n    };\n    const remainingTime = calculateRemainingTime(currentHour, currentMinute);\n    console.log(`남은 시간: ${remainingTime.minute}분`);\n  }, [timeData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: StationIdData[id - 101].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", arrivalTime !== null ? `도착까지 ${arrivalTime}분 남았습니다.` : \"도착 정보를 가져오는 중입니다...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ArrivalInfo, \"/w4nKAN+gtrLpY2ht4YwTzIFz24=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = ArrivalInfo;\nexport default ArrivalInfo;\nvar _c;\n$RefreshReg$(_c, \"ArrivalInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useSelector","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ArrivalInfo","_s","id","StationIdData","state","StationNameData","stationId","timeData","setTimeData","arrivalTime","setArrivalTime","callApi","response","get","resultList","data","body","items","item","error","console","currentHour","Date","getHours","currentDay","getDay","currentMinute","getMinutes","resStNum","filter","stNum","Number","resDay","dayType","resDrctUp","drctType","stationMinuteUp","map","tmList","split","stationHourUp","tmZone","log","calculateRemainingTime","hour","minute","currentIndex","indexOf","minuteArrayForHour","remainingTime","arrivalMinute","currentMinuteValue","parseInt","Boolean","length","nextHourIndex","nextHour","nextMinuteValue","nextHourRemainingMinutes","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction ArrivalInfo() {\n  let { id } = useParams();\n  const StationIdData = useSelector((state) => state.StationNameData.stationId);\n\n  const [timeData, setTimeData] = useState([]);\n  const [arrivalTime, setArrivalTime] = useState(null);\n\n  const callApi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/arrivalinfo/:${id}`);\n      const resultList = response.data.response.body.items.item;\n      setTimeData(resultList);\n    } catch (error) {\n      console.error(\"Error fetching arrival info:\", error);\n    }\n  };\n\n  useEffect(() => {\n    callApi();\n  }, [id]);\n\n  //----------------------------------------\n\n  // console.log(timeData)\n\n  useEffect(()=>{\n\n  const currentHour = new Date().getHours();\n  const currentDay = new Date().getDay();\n  const currentMinute = new Date().getMinutes();\n\n  const resStNum = timeData.filter((data)=> data.stNum === Number(id));\n  const resDay = resStNum.filter((data)=> 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n  const resDrctUp = resDay.filter((data)=> data.drctType === 0);\n  const stationMinuteUp = resDrctUp.map((data)=>data?.tmList.split(' '));\n  const stationHourUp = resDrctUp.map(data => data.tmZone);\n\n  console.log(stationMinuteUp);\n\n  const calculateRemainingTime = (hour, minute) => {\n    const currentIndex = stationHourUp.indexOf(hour);\n    const minuteArrayForHour = stationMinuteUp[currentIndex];\n\n    const remainingTime = minuteArrayForHour.map(arrivalMinute => {\n      const currentMinuteValue = parseInt(arrivalMinute);\n      if (currentMinuteValue > minute) {\n        return { hour, minute: currentMinuteValue - minute };\n      }\n      return null;\n    }).filter(Boolean);\n\n    if (remainingTime.length > 0) {\n      return remainingTime[0];\n    }\n\n    const nextHourIndex = (currentIndex + 1) % stationHourUp.length;\n    const nextHour = stationHourUp[nextHourIndex];\n    const nextMinuteValue = parseInt(stationMinuteUp[nextHourIndex][0]);\n    const nextHourRemainingMinutes = (60 - minute) + nextMinuteValue;\n\n    return { hour: nextHour, minute: nextHourRemainingMinutes };\n  };\n\n\n  const remainingTime = calculateRemainingTime(currentHour, currentMinute);\n  console.log(`남은 시간: ${remainingTime.minute}분`);\n\n},[timeData]);\n\n  return (\n    <>\n      <h1>{StationIdData[id-101].name}</h1>\n      <h2> {arrivalTime !== null ? `도착까지 ${arrivalTime}분 남았습니다.` : \"도착 정보를 가져오는 중입니다...\"}</h2>\n    </>\n  );\n}\n\nexport default ArrivalInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}