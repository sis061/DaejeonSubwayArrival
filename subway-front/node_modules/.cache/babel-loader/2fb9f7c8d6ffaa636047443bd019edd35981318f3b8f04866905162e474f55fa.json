{"ast":null,"code":"var _jsxFileName = \"/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// import { useParams } from \"react-router-dom\";\n\n// import { useSelector } from \"react-redux\";\n// import axios from \"axios\";\n\n// function ArrivalInfo() {\n//   let { id } = useParams();\n//   const StationIdData = useSelector((state) => state.StationNameData.stationId);\n\n//   const [timeData, setTimeData] = useState([]);\n\n//   const callApi = async () => {\n//     await axios.get(`http://localhost:8000/arrivalinfo/:${id}`).then((res) => {\n//       let resultList = res.data.response.body.items.item;\n//       setTimeData(resultList);\n//     });\n//   };\n\n//   useEffect(() => {\n//     callApi();\n//   }, []);\n\n//   //----------------------------------------\n\n//   // console.log(timeData)\n\n//   const currentHour = new Date().getHours();\n//   const currentDay = new Date().getDay();\n//   const currentMinute = new Date().getMinutes();\n\n//   const resStNum = timeData.filter((data)=> data.stNum === Number(id));\n//   const resDay = resStNum.filter((data)=> 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n//   const resDrctUp = resDay.filter((data)=> data.drctType === 0);\n//   const stationMinuteUp = resDrctUp.map((data)=>data?.tmList.split(' '));\n//   const stationHourUp = resDrctUp.map(data => data.tmZone);\n\n//   console.log(\"stationHourUp\",stationHourUp);\n\n//   return (\n//     <>\n//       <h1>{StationIdData[id-101].name}</h1>\n//       <h2> {currentHour} 시</h2>\n//     </>\n//   );\n// }\n\n// export default ArrivalInfo;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArrivalInfo() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const StationIdData = useSelector(state => state.StationNameData.stationId);\n  const [timeData, setTimeData] = useState([]);\n  const [arrivalTime, setArrivalTime] = useState(null);\n  const callApi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/arrivalinfo/:${id}`);\n      const resultList = response.data.response.body.items.item;\n      setTimeData(resultList);\n    } catch (error) {\n      console.error(\"Error fetching arrival info:\", error);\n    }\n  };\n  useEffect(() => {\n    callApi();\n  }, [id]);\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n    const currentDay = new Date().getDay();\n    const currentMinute = new Date().getMinutes();\n    const resStNum = timeData.filter(data => data.stNum === Number(id));\n    const resDay = resStNum.filter(data => 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n    const resDrctUp = resDay.filter(data => data.drctType === 0);\n    if (resDrctUp.length > 0) {\n      const stationMinuteUp = resDrctUp.map(data => data.tmList.split(\" \"));\n      const stationHourUp = resDrctUp.map(data => data.tmZone);\n      for (let i = 0; i < stationHourUp.length; i++) {\n        if (currentHour < stationHourUp[i]) {\n          const minutesRemaining = stationMinuteUp[i][0] - currentMinute >= 0 ? stationMinuteUp[i][0] - currentMinute : stationMinuteUp[i][1] - currentMinute;\n          setArrivalTime(minutesRemaining);\n          break;\n        } else if (currentHour === stationHourUp[i]) {\n          const minutesRemaining = stationMinuteUp[i][0] - currentMinute >= 0 ? stationMinuteUp[i][0] - currentMinute : stationMinuteUp[i][1] - currentMinute;\n          setArrivalTime(minutesRemaining);\n          break;\n        }\n      }\n    }\n  }, [timeData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: StationIdData[id - 101].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", arrivalTime !== null ? `도착까지 ${arrivalTime}분 남았습니다.` : \"도착 정보를 가져오는 중입니다...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ArrivalInfo, \"/w4nKAN+gtrLpY2ht4YwTzIFz24=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = ArrivalInfo;\nexport default ArrivalInfo;\nvar _c;\n$RefreshReg$(_c, \"ArrivalInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useSelector","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ArrivalInfo","_s","id","StationIdData","state","StationNameData","stationId","timeData","setTimeData","arrivalTime","setArrivalTime","callApi","response","get","resultList","data","body","items","item","error","console","currentHour","Date","getHours","currentDay","getDay","currentMinute","getMinutes","resStNum","filter","stNum","Number","resDay","dayType","resDrctUp","drctType","length","stationMinuteUp","map","tmList","split","stationHourUp","tmZone","i","minutesRemaining","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n\n// import { useParams } from \"react-router-dom\";\n\n// import { useSelector } from \"react-redux\";\n// import axios from \"axios\";\n\n// function ArrivalInfo() {\n//   let { id } = useParams();\n//   const StationIdData = useSelector((state) => state.StationNameData.stationId);\n\n//   const [timeData, setTimeData] = useState([]);\n\n//   const callApi = async () => {\n//     await axios.get(`http://localhost:8000/arrivalinfo/:${id}`).then((res) => {\n//       let resultList = res.data.response.body.items.item;\n//       setTimeData(resultList);\n//     });\n//   };\n\n//   useEffect(() => {\n//     callApi();\n//   }, []);\n\n//   //----------------------------------------\n\n//   // console.log(timeData)\n\n//   const currentHour = new Date().getHours();\n//   const currentDay = new Date().getDay();\n//   const currentMinute = new Date().getMinutes();\n\n//   const resStNum = timeData.filter((data)=> data.stNum === Number(id));\n//   const resDay = resStNum.filter((data)=> 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n//   const resDrctUp = resDay.filter((data)=> data.drctType === 0);\n//   const stationMinuteUp = resDrctUp.map((data)=>data?.tmList.split(' '));\n//   const stationHourUp = resDrctUp.map(data => data.tmZone);\n\n//   console.log(\"stationHourUp\",stationHourUp);\n\n//   return (\n//     <>\n//       <h1>{StationIdData[id-101].name}</h1>\n//       <h2> {currentHour} 시</h2>\n//     </>\n//   );\n// }\n\n// export default ArrivalInfo;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction ArrivalInfo() {\n  const { id } = useParams();\n  const StationIdData = useSelector((state) => state.StationNameData.stationId);\n\n  const [timeData, setTimeData] = useState([]);\n  const [arrivalTime, setArrivalTime] = useState(null);\n\n  const callApi = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/arrivalinfo/:${id}`);\n      const resultList = response.data.response.body.items.item;\n      setTimeData(resultList);\n    } catch (error) {\n      console.error(\"Error fetching arrival info:\", error);\n    }\n  };\n\n  useEffect(() => {\n    callApi();\n  }, [id]);\n\n  useEffect(() => {\n    const currentHour = new Date().getHours();\n    const currentDay = new Date().getDay();\n    const currentMinute = new Date().getMinutes();\n\n    const resStNum = timeData.filter((data) => data.stNum === Number(id));\n    const resDay = resStNum.filter((data) => (0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1));\n    const resDrctUp = resDay.filter((data) => data.drctType === 0);\n\n    if (resDrctUp.length > 0) {\n      const stationMinuteUp = resDrctUp.map((data) => data.tmList.split(\" \"));\n      const stationHourUp = resDrctUp.map((data) => data.tmZone);\n\n      for (let i = 0; i < stationHourUp.length; i++) {\n        if (currentHour < stationHourUp[i]) {\n          const minutesRemaining = stationMinuteUp[i][0] - currentMinute >= 0 ? stationMinuteUp[i][0] - currentMinute : stationMinuteUp[i][1] - currentMinute;\n          setArrivalTime(minutesRemaining);\n          break;\n        } else if (currentHour === stationHourUp[i]) {\n          const minutesRemaining = stationMinuteUp[i][0] - currentMinute >= 0 ? stationMinuteUp[i][0] - currentMinute : stationMinuteUp[i][1] - currentMinute;\n          setArrivalTime(minutesRemaining);\n          break;\n        }\n      }\n    }\n  }, [timeData]);\n\n  return (\n    <>\n      <h1>{StationIdData[id - 101].name}</h1>\n      <h2> {arrivalTime !== null ? `도착까지 ${arrivalTime}분 남았습니다.` : \"도착 정보를 가져오는 중입니다...\"}</h2>\n    </>\n  );\n}\n\nexport default ArrivalInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}