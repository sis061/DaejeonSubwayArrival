{"ast":null,"code":"var _jsxFileName = \"/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArrivalInfo() {\n  _s();\n  let {\n    id\n  } = useParams();\n  const StationIdData = useSelector(state => state.StationNameData.stationId);\n  const [timeData, setTimeData] = useState([]);\n  const callApi = async () => {\n    await axios.get(`http://localhost:8000/arrivalinfo/:${id}`).then(res => {\n      let resultList = res.data.response.body.items.item;\n      setTimeData(resultList);\n    });\n  };\n  useEffect(() => {\n    callApi();\n  }, []);\n\n  //----------------------------------------\n\n  // console.log(timeData)\n\n  // const currentHour = new Date().getHours();\n  const currentDay = new Date().getDay();\n  const currentMinute = new Date().getMinutes();\n  const currentTimeStamp = currentHour * 60 + currentMinute;\n  const resStNum = timeData.filter(data => data.stNum === Number(id));\n  const resDay = resStNum.filter(data => 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n  const resDrctUp = resDay.filter(data => data.drctType === 0);\n  const stationMinuteUp = resDrctUp.map(data => data === null || data === void 0 ? void 0 : data.tmList.split(' '));\n  const stationHourUp = resDrctUp.map(data => data.tmZone);\n  const stationHourUptoMin = stationHourUp.map(arr => arr * 60);\n\n  // const stationTimeStamp = stationMinuteUp.map((subArray) => subArray.map(value => parseInt(value) + stationHourUptoMin[subArray.indexOf(value)]));\n\n  console.log(stationHourUp);\n  const timeArray = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n  const minuteArray = [[\"34\", \"49\"], [\"04\", \"17\", \"30\", \"42\", \"54\"], [\"06\", \"16\", \"26\", \"34\", \"40\", \"46\", \"52\", \"58\"], [\"04\", \"09\", \"14\", \"19\", \"24\", \"29\", \"34\", \"40\", \"48\", \"56\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"52\", \"59\"], [\"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"46\", \"52\", \"58\"], [\"04\", \"10\", \"16\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"], [\"04\", \"14\", \"24\", \"34\", \"44\", \"56\"], [\"08\", \"20\", \"32\", \"44\", \"56\"], [\"10\", \"24\", \"36(판암)\", \"46(정부청사)\"]];\n  const getCurrentTime = () => {\n    return new Promise(resolve => {\n      const currentHour = new Date().getHours();\n      const currentMinute = new Date().getMinutes();\n      resolve({\n        currentHour,\n        currentMinute\n      });\n    });\n  };\n  const calculateRemainingTime = async () => {\n    const {\n      currentHour,\n      currentMinute\n    } = await getCurrentTime();\n    const currentIndex = timeArray.indexOf(currentHour);\n    const minuteArrayForHour = minuteArray[currentIndex];\n    const remainingTime = minuteArrayForHour.map(async arrivalMinute => {\n      const currentMinuteValue = parseInt(arrivalMinute);\n      if (currentMinuteValue > currentMinute) {\n        return {\n          hour: currentHour,\n          minute: currentMinuteValue - currentMinute\n        };\n      }\n      return null;\n    });\n    const filteredRemainingTime = (await Promise.all(remainingTime)).filter(Boolean);\n    if (filteredRemainingTime.length > 0) {\n      return filteredRemainingTime[0];\n    }\n    const nextHourIndex = (currentIndex + 1) % timeArray.length;\n    const nextHour = timeArray[nextHourIndex];\n    const nextMinuteValue = parseInt(minuteArray[nextHourIndex][0]);\n    const nextHourRemainingMinutes = 60 - currentMinute + nextMinuteValue;\n    return {\n      hour: nextHour,\n      minute: nextHourRemainingMinutes\n    };\n  };\n  const printRemainingTime = async () => {\n    try {\n      const remainingTime = await calculateRemainingTime();\n      console.log(`남은 시간: ${remainingTime.minute}분`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  printRemainingTime();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: StationIdData[id - 101].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", currentHour, \" \\uC2DC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ArrivalInfo, \"vjNaqqgHCDQ3RiVDamtV0pi8j08=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = ArrivalInfo;\nexport default ArrivalInfo;\nvar _c;\n$RefreshReg$(_c, \"ArrivalInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useSelector","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ArrivalInfo","_s","id","StationIdData","state","StationNameData","stationId","timeData","setTimeData","callApi","get","then","res","resultList","data","response","body","items","item","currentDay","Date","getDay","currentMinute","getMinutes","currentTimeStamp","currentHour","resStNum","filter","stNum","Number","resDay","dayType","resDrctUp","drctType","stationMinuteUp","map","tmList","split","stationHourUp","tmZone","stationHourUptoMin","arr","console","log","timeArray","minuteArray","getCurrentTime","Promise","resolve","getHours","calculateRemainingTime","currentIndex","indexOf","minuteArrayForHour","remainingTime","arrivalMinute","currentMinuteValue","parseInt","hour","minute","filteredRemainingTime","all","Boolean","length","nextHourIndex","nextHour","nextMinuteValue","nextHourRemainingMinutes","printRemainingTime","error","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sungwoojeong/Frontend/subway/subway-front/src/components/ArrivalInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction ArrivalInfo() {\n  let { id } = useParams();\n  const StationIdData = useSelector((state) => state.StationNameData.stationId);\n\n  const [timeData, setTimeData] = useState([]);\n\n  const callApi = async () => {\n    await axios.get(`http://localhost:8000/arrivalinfo/:${id}`).then((res) => {\n      let resultList = res.data.response.body.items.item;\n      setTimeData(resultList);\n    });\n  };\n\n  useEffect(() => {\n    callApi();\n  }, []);\n\n  //----------------------------------------\n\n  // console.log(timeData)\n\n  // const currentHour = new Date().getHours();\n  const currentDay = new Date().getDay();\n  const currentMinute = new Date().getMinutes();\n  const currentTimeStamp = currentHour * 60 + currentMinute;\n\n  const resStNum = timeData.filter((data)=> data.stNum === Number(id));\n  const resDay = resStNum.filter((data)=> 0 < currentDay && currentDay < 6 ? data.dayType === 0 : data.dayType === 1);\n  const resDrctUp = resDay.filter((data)=> data.drctType === 0);\n  const stationMinuteUp = resDrctUp.map((data)=>data?.tmList.split(' '));\n  const stationHourUp = resDrctUp.map(data => data.tmZone);\n  const stationHourUptoMin = stationHourUp.map(arr => arr*60);\n\n  // const stationTimeStamp = stationMinuteUp.map((subArray) => subArray.map(value => parseInt(value) + stationHourUptoMin[subArray.indexOf(value)]));\n\n  console.log(stationHourUp);\n\n  const timeArray = [\n    5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23\n  ];\n\n  const minuteArray = [\n    [\"34\", \"49\"],\n    [\"04\", \"17\", \"30\", \"42\", \"54\"],\n    [\"06\", \"16\", \"26\", \"34\", \"40\", \"46\", \"52\", \"58\"],\n    [\"04\", \"09\", \"14\", \"19\", \"24\", \"29\", \"34\", \"40\", \"48\", \"56\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"52\", \"59\"],\n    [\"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"46\", \"52\", \"58\"],\n    [\"04\", \"10\", \"16\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"54\"],\n    [\"04\", \"14\", \"24\", \"34\", \"44\", \"56\"],\n    [\"08\", \"20\", \"32\", \"44\", \"56\"],\n    [\"10\", \"24\", \"36(판암)\", \"46(정부청사)\"]\n  ];\n\n  const getCurrentTime = () => {\n    return new Promise((resolve) => {\n      const currentHour = new Date().getHours();\n      const currentMinute = new Date().getMinutes();\n      resolve({ currentHour, currentMinute });\n    });\n  };\n\n  const calculateRemainingTime = async () => {\n    const { currentHour, currentMinute } = await getCurrentTime();\n\n    const currentIndex = timeArray.indexOf(currentHour);\n    const minuteArrayForHour = minuteArray[currentIndex];\n\n    const remainingTime = minuteArrayForHour.map(async (arrivalMinute) => {\n      const currentMinuteValue = parseInt(arrivalMinute);\n      if (currentMinuteValue > currentMinute) {\n        return { hour: currentHour, minute: currentMinuteValue - currentMinute };\n      }\n      return null;\n    });\n\n    const filteredRemainingTime = (await Promise.all(remainingTime)).filter(Boolean);\n\n    if (filteredRemainingTime.length > 0) {\n      return filteredRemainingTime[0];\n    }\n\n    const nextHourIndex = (currentIndex + 1) % timeArray.length;\n    const nextHour = timeArray[nextHourIndex];\n    const nextMinuteValue = parseInt(minuteArray[nextHourIndex][0]);\n    const nextHourRemainingMinutes = (60 - currentMinute) + nextMinuteValue;\n\n    return { hour: nextHour, minute: nextHourRemainingMinutes };\n  };\n\n  const printRemainingTime = async () => {\n    try {\n      const remainingTime = await calculateRemainingTime();\n      console.log(`남은 시간: ${remainingTime.minute}분`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  printRemainingTime();\n\n  return (\n    <>\n      <h1>{StationIdData[id-101].name}</h1>\n      <h2> {currentHour} 시</h2>\n      {/* <h2>{timeData[0]?.tmList.split(\" \")[0]} 분</h2> */}\n    </>\n  );\n}\n\nexport default ArrivalInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}